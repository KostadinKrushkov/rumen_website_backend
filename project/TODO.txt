- Write a proper compose file for the release on the target machine
- Make sure that exporting and importing the containers would result in a valid network
- Remove the file handling for the favourite pictures in /home, add a separate table in the database

Possible Improvements:
- find out how to compress images on UI side -> research compression
- add api call to send email on forgotten password (perhaps 5 times a day max to avoid abuse)
- check if speed of register validation can be improved
- find a way to store the picture as a blog/varbinary instead of base64 plain text -> would decrease storage and is considered the proper way to do it
*https://stackoverflow.com/questions/9722603/storing-image-in-database-directly-or-as-base64-data#:~:text=While%20base64%20is%20fine%20for,over%20a%20raw%20binary%20format.

X Find a way to generate SAFE certificates -> Make sure they are safe
X add authorization testing and setup admin user in client
X add sanitization to each call - find out where is the best place to do it (sql sanitization method is added in the controller as wrapper)
X change the way i get data from jsons (dicts) form ['asdf'] to .get('asdf')
X research a good way to make a user an admin user so its safe
X add authorization
X standardize the response of the api
X add integration tests
X add is_verified column to the users so in the future I can validate emails
X add username in the users table -> dto -> gateway pipeline
X Add authentication
X Add credentials validators
X Add dependency for category to the picture table
X Find out how to properly do rest for each api request -> e.g. should the POST request have /picture/<title> and how to do that
X Add stored procedures for all POST queries so the clients gets result if trying to create entity with existing unique column. same for put
* Not necessary, I could check how many rows are matched (count)
X Make sure the deletes work with the row count change
X Fill postman api book to for testing
X refactor the gateways to reduce duplication
X Add logging
X create an endpoint to update the list of home screen images that are shown
X find out what the csrf was meant to do and how to remove it after finishing the authorization -> It's not necessary for this simple website
X add sanitizing on apostrophoes for picture, blogs and categories
X add integration tests for the authorization_required wrapper part for the token
X make documentation for how to run this in dev mode and how to release
X make getting pictures and blogs work in batches
X Add database automated backups
X Test sending containers to remote server
X Fix problem with registration with complex passwords
X Clean the unneeded images in docker (docker prune)

ALT + SHIFT + G to put cursors on selected lines